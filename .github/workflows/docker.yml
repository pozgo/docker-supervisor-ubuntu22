name: Build, Test & Deploy Docker Image

on:
  pull_request:
    branches: [ main, dev ]
  release:
    types: [ published ]
  push:
    branches: [ dev ]

env:
  IMAGE_NAME: polinux/supervisor-ubuntu22
  REGISTRY: docker.io

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image for testing
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: ${{ env.IMAGE_NAME }}:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          # Test container starts successfully
          docker run -d --name test-container -p 9111:9111 -e SUPERVISOR_PASSWORD=testpass ${{ env.IMAGE_NAME }}:test
          sleep 5
          
          # Check if container is running
          if [ "$(docker ps -q -f name=test-container)" = "" ]; then
            echo "Container failed to start"
            docker logs test-container
            exit 1
          fi
          
          # Test supervisor web interface is accessible
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:9111)
          if [ "$HTTP_STATUS" != "200" ]; then
            echo "Supervisor web interface not accessible (HTTP $HTTP_STATUS)"
            docker logs test-container
            exit 1
          fi
          
          echo "All tests passed!"
          docker stop test-container
          docker rm test-container

      - name: Test with custom environment variables
        run: |
          # Test with custom supervisor credentials
          docker run -d --name test-env-container \
            -e SUPERVISOR_USERNAME=testuser \
            -e SUPERVISOR_PASSWORD=testpass \
            -e SUPERVISOR_UID=1001 \
            -e SUPERVISOR_GID=1001 \
            ${{ env.IMAGE_NAME }}:test
          sleep 5
          
          # Check if container is running with custom settings
          if [ "$(docker ps -q -f name=test-env-container)" = "" ]; then
            echo "Container with custom env failed to start"
            docker logs test-env-container
            exit 1
          fi
          
          echo "Environment variable test passed!"
          docker stop test-env-container
          docker rm test-env-container

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push multi-platform Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update Docker Hub description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ env.IMAGE_NAME }}
          readme-filepath: ./README.md